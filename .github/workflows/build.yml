name: CI - Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          debootstrap xorriso genisoimage binutils squashfs-tools \
          grub-pc-bin grub-efi-amd64-bin dosfstools mtools xz-utils zstd \
          curl rsync

    - name: Set date variable
      run: echo "DATE=$(date +%Y%m%d)" >> $GITHUB_ENV

    - name: Run build - Standard i386
      run: |
        echo "Starting build for Standard i386..."
        sudo ./minios-cmd -d bookworm -a i386 -de xfce -pv standard -aufs -kl
        sudo mkdir -p build/output/standard-i386
        sudo mv build/iso/*.iso build/output/standard-i386/
        echo "Build completed for Standard i386."

    - name: Archive build output - Standard i386
      uses: actions/upload-artifact@v3
      with:
        name: minios-bookworm-xfce-Standard-i386-${{ env.DATE }}
        path: build/output/standard-i386

    - name: Run build - Standard amd64
      run: |
        echo "Starting build for Standard amd64..."
        sudo ./minios-cmd -d bookworm -a amd64 -de xfce -pv standard -aufs -dkms -kl
        sudo mkdir -p build/output/standard-amd64
        sudo mv build/iso/*.iso build/output/standard-amd64/
        echo "Build completed for Standard amd64."

    - name: Archive build output - Standard amd64
      uses: actions/upload-artifact@v3
      with:
        name: minios-bookworm-xfce-Standard-amd64-${{ env.DATE }}
        path: build/output/standard-amd64

    - name: Run build - Toolbox amd64
      run: |
        echo "Starting build for Toolbox amd64..."
        sudo ./minios-cmd -d bookworm -a amd64 -de xfce -pv toolbox -aufs -dkms -kl
        sudo mkdir -p build/output/toolbox-amd64
        sudo mv build/iso/*.iso build/output/toolbox-amd64/
        echo "Build completed for Toolbox amd64."

    - name: Archive build output - Toolbox amd64
      uses: actions/upload-artifact@v3
      with:
        name: minios-bookworm-xfce-Toolbox-amd64-${{ env.DATE }}
        path: build/output/toolbox-amd64

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts

    - name: Set Release Tag Name
      id: set_tag
      run: |
        TAG="release-$(date +%Y%m%d)"
        echo "::set-output name=tag_name::$TAG"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.set_tag.outputs.tag_name }}
        release_name: Release ${{ steps.set_tag.outputs.tag_name }}
        draft: false
        prerelease: true

    - name: Upload Release Assets
      run: |
        for artifact in ./artifacts/*/*; do
          asset_name=$(basename $artifact)
          echo "Uploading $asset_name"
          upload_url=$(echo "${{ steps.create_release.outputs.upload_url }}" | sed 's/{?name,label}//')
          curl \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"$artifact" \
            "$upload_url?name=$asset_name"
        done
